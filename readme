设计思路：
框架采用python3 + selenium+ PO + yaml + ddt + unittest，使用Page Object模式将页面定位和业务操作分开，分离测试对象（元素对象）和测试脚本（用例脚本），
一个页面建一个对象类，提高用例的可维护性；使用yaml管理页面控件元素数据和测试用例数据。例如元素ID等发生变化时，不需要去修改测试代码，只需要在对应的页面元素yaml
文件中修改即可；
测试框架分层设计：
基础层，把常用的查找和操作封装成基础类
业务层，主要是封装对像业面类，一个页面建一个类，业务层继承基础类
用例层：针对产品页面功能进行构造摸拟执行测试
框架层：提供基础组件，支撑整个流程执行及功能扩展，给用例层提供各页面的元素数据、用例测试数据，测试报告输出等
